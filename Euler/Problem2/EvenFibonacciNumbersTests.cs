using System.Collections.Generic;
using NUnit.Framework;

namespace Euler.Problem2
{
    [TestFixture]
    public class EvenFibonacciNumbersTests
    {
        //Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        [TestCase(10, 10)]
        [TestCase(100, 44)]
        [TestCase(4000000, 4613732)]
        public void Test_Sum_Off_First_N_Even_Fibonaccis_Below(int n, int expected)
        {
            var evenfibonacci = new Fibonacci();
            var res = evenfibonacci.SumOfEvenBelow(n);
            Assert.AreEqual(expected, res);
        }



        [Test]
        public void TestCalculateFibonacciForTerms()
        {
            var evenfibonacci = new Fibonacci();
            var terms = 10;
            var expected = new List<int>() {1, 2, 3, 5, 8, 13, 21, 34, 55, 89};
            var actual = evenfibonacci.CalculateFibonaccisForTerms(terms);
            Assert.AreEqual(expected, actual);
        }

        [TestCase(2, 3)]
        [TestCase(3, 6)]
        [TestCase(4, 11)]
        public void Test_Sum_Off_First_N_Fibonaccis(int n, int expected)
        {
            var evenfibonacci = new Fibonacci();
            var res = evenfibonacci.Sum(n);
            Assert.AreEqual(expected, res);
        }

        [TestCase(2, 2)]
        [TestCase(3, 2)]
        [TestCase(4, 2)]
        [TestCase(5, 10)]
        public void Test_Sum_Off_First_N_Even_Fibonaccis(int n, int expected)
        {
            var evenfibonacci = new Fibonacci();
            var res = evenfibonacci.SumOfEven(n);
            Assert.AreEqual(expected, res);
        }

        


        //[TestCase(0, 0)]
        [TestCase(1,1)]
        [TestCase(2, 2)]
        [TestCase(3, 3)]
        [TestCase(4, 5)]
        public void TestFibonacci(int n, int expecedFibonacci)
        {
            var fib = new Fibonacci();
            Assert.AreEqual(expecedFibonacci, fib.Fib(n));
            
        }

    }
}
